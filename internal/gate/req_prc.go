// Code generated by protoc-gen-go-kiwi. DO NOT EDIT.

package gate

import (
	"game/internal/codec"
	"game/internal/common"
	"game/proto/pb"
	"github.com/15mga/kiwi"
	"github.com/15mga/kiwi/core"
)

func registerReq() {
	kiwi.Router().BindReq(common.Gate, codec.GateHeartbeatReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateHeartbeatReq](req, _svc.OnGateHeartbeat)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateBanAddrReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateBanAddrReq](req, _svc.OnGateBanAddr)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateSendToIdReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateSendToIdReq](req, _svc.OnGateSendToId)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateSendToAddrReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateSendToAddrReq](req, _svc.OnGateSendToAddr)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateSendToMultiIdReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateSendToMultiIdReq](req, _svc.OnGateSendToMultiId)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateSendToMultiAddrReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateSendToMultiAddrReq](req, _svc.OnGateSendToMultiAddr)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateSendToAllReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateSendToAllReq](req, _svc.OnGateSendToAll)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateCloseIdReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateCloseIdReq](req, _svc.OnGateCloseId)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateCloseAddrReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateCloseAddrReq](req, _svc.OnGateCloseAddr)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateUpdateReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateUpdateReq](req, _svc.OnGateUpdate)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateAddrUpdateReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateAddrUpdateReq](req, _svc.OnGateAddrUpdate)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateRemoveReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateRemoveReq](req, _svc.OnGateRemove)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateAddrRemoveReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateAddrRemoveReq](req, _svc.OnGateAddrRemove)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateGetReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateGetReq](req, _svc.OnGateGet)
	})
	kiwi.Router().BindReq(common.Gate, codec.GateAddrGetReq, func(req kiwi.IRcvRequest) {
		if _svc.IsShutdown() {
			return
		}
		_svc.Wait()
		req.SetReceiver(_svc)
		core.SelfPrcReq[*pb.GateAddrGetReq](req, _svc.OnGateAddrGet)
	})
}
