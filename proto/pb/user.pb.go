// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: model/user.proto

package pb

import (
	_ "github.com/15mga/kiwi_tool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OnlineState int32

const (
	OnlineState_Disconnected OnlineState = 0 //离线
	OnlineState_Connected    OnlineState = 1 //在线
)

// Enum value maps for OnlineState.
var (
	OnlineState_name = map[int32]string{
		0: "Disconnected",
		1: "Connected",
	}
	OnlineState_value = map[string]int32{
		"Disconnected": 0,
		"Connected":    1,
	}
)

func (x OnlineState) Enum() *OnlineState {
	p := new(OnlineState)
	*p = x
	return p
}

func (x OnlineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnlineState) Descriptor() protoreflect.EnumDescriptor {
	return file_model_user_proto_enumTypes[0].Descriptor()
}

func (OnlineState) Type() protoreflect.EnumType {
	return &file_model_user_proto_enumTypes[0]
}

func (x OnlineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnlineState.Descriptor instead.
func (OnlineState) EnumDescriptor() ([]byte, []int) {
	return file_model_user_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id"`
	Password        string      `protobuf:"bytes,2,opt,name=password,proto3" json:"password" bson:"password"`
	RoleMask        int64       `protobuf:"varint,3,opt,name=roleMask,proto3" json:"roleMask" bson:"role_mask"`                        //角色组：1:访客，2：玩家，
	Ban             bool        `protobuf:"varint,4,opt,name=ban,proto3" json:"ban" bson:"ban"`                                        //禁用
	Nick            string      `protobuf:"bytes,5,opt,name=nick,proto3" json:"nick" bson:"nick"`                                      //昵称
	Addr            string      `protobuf:"bytes,6,opt,name=addr,proto3" json:"addr" bson:"addr"`                                      //地址
	IdCard          string      `protobuf:"bytes,7,opt,name=idCard,proto3" json:"idCard" bson:"id_card"`                               //身份证
	RealName        string      `protobuf:"bytes,8,opt,name=realName,proto3" json:"realName" bson:"real_name"`                         //实名
	Mobile          string      `protobuf:"bytes,9,opt,name=mobile,proto3" json:"mobile" bson:"mobile"`                                //手机号
	SignUpTime      int64       `protobuf:"varint,10,opt,name=signUpTime,proto3" json:"signUpTime" bson:"sign_up_time"`                //注册时间
	LastSignInTime  int64       `protobuf:"varint,11,opt,name=lastSignInTime,proto3" json:"lastSignInTime" bson:"last_sign_in_time"`   //最后登录时间
	LastSignInAddr  string      `protobuf:"bytes,12,opt,name=lastSignInAddr,proto3" json:"lastSignInAddr" bson:"last_sign_in_addr"`    //最后登录地址
	LastOs          string      `protobuf:"bytes,13,opt,name=lastOs,proto3" json:"lastOs" bson:"last_os"`                              //最后登录使用的系统
	Status          OnlineState `protobuf:"varint,15,opt,name=status,proto3,enum=pb.OnlineState" json:"status" bson:"status"`          //状态
	Avatar          string      `protobuf:"bytes,17,opt,name=avatar,proto3" json:"avatar" bson:"avatar"`                               //头像地址
	WechatUnionId   string      `protobuf:"bytes,18,opt,name=wechatUnionId,proto3" json:"wechatUnionId" bson:"wechat_union_id"`        //微信联合 id
	WechatCode      string      `protobuf:"bytes,19,opt,name=wechatCode,proto3" json:"wechatCode" bson:"wechat_code"`                  //微信使用过的 code
	Token           string      `protobuf:"bytes,20,opt,name=token,proto3" json:"token" bson:"token"`                                  //token
	Head            []byte      `protobuf:"bytes,21,opt,name=head,proto3" json:"head" bson:"head"`                                     //会话
	LastOfflineTime int64       `protobuf:"varint,22,opt,name=lastOfflineTime,proto3" json:"lastOfflineTime" bson:"last_offline_time"` //最后下线时间
	OnlineDur       int64       `protobuf:"varint,29,opt,name=onlineDur,proto3" json:"onlineDur" bson:"online_dur"`                    //在线时长
	Test            bool        `protobuf:"varint,34,opt,name=test,proto3" json:"test" bson:"test"`                                    //测试账号
	CharacterIds    []string    `protobuf:"bytes,35,rep,name=characterIds,proto3" json:"characterIds" bson:"character_ids"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_model_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_model_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetRoleMask() int64 {
	if x != nil {
		return x.RoleMask
	}
	return 0
}

func (x *User) GetBan() bool {
	if x != nil {
		return x.Ban
	}
	return false
}

func (x *User) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *User) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *User) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *User) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *User) GetSignUpTime() int64 {
	if x != nil {
		return x.SignUpTime
	}
	return 0
}

func (x *User) GetLastSignInTime() int64 {
	if x != nil {
		return x.LastSignInTime
	}
	return 0
}

func (x *User) GetLastSignInAddr() string {
	if x != nil {
		return x.LastSignInAddr
	}
	return ""
}

func (x *User) GetLastOs() string {
	if x != nil {
		return x.LastOs
	}
	return ""
}

func (x *User) GetStatus() OnlineState {
	if x != nil {
		return x.Status
	}
	return OnlineState_Disconnected
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetWechatUnionId() string {
	if x != nil {
		return x.WechatUnionId
	}
	return ""
}

func (x *User) GetWechatCode() string {
	if x != nil {
		return x.WechatCode
	}
	return ""
}

func (x *User) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *User) GetHead() []byte {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *User) GetLastOfflineTime() int64 {
	if x != nil {
		return x.LastOfflineTime
	}
	return 0
}

func (x *User) GetOnlineDur() int64 {
	if x != nil {
		return x.OnlineDur
	}
	return 0
}

func (x *User) GetTest() bool {
	if x != nil {
		return x.Test
	}
	return false
}

func (x *User) GetCharacterIds() []string {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

var File_model_user_proto protoreflect.FileDescriptor

var file_model_user_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x31, 0x35, 0x6d, 0x67, 0x61, 0x2f, 0x6b, 0x69, 0x77, 0x69, 0x5f, 0x74, 0x6f,
	0x6f, 0x6c, 0x2f, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x06,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x62, 0x61, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x73, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a,
	0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x75, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x75, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x3a, 0xc3, 0x01,
	0xf0, 0xe3, 0x49, 0x01, 0xfa, 0xe3, 0x49, 0x0c, 0x0a, 0x08, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x28, 0x01, 0xfa, 0xe3, 0x49, 0x0a, 0x0a, 0x06, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x10, 0x01, 0xfa, 0xe3, 0x49, 0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0xfa, 0xe3, 0x49, 0x10, 0x0a, 0x0e, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x70,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0xfa, 0xe3, 0x49, 0x15, 0x0a, 0x13, 0x0a, 0x11, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0xfa, 0xe3,
	0x49, 0x15, 0x0a, 0x13, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0xfa, 0xe3, 0x49, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0xfa, 0xe3, 0x49, 0x13, 0x0a, 0x11, 0x0a, 0x0f, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0xfa, 0xe3, 0x49, 0x0b, 0x0a,
	0x07, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x28, 0x01, 0xfa, 0xe3, 0x49, 0x11, 0x0a, 0x0d,
	0x0a, 0x0b, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x28, 0x01, 0x88,
	0xe4, 0x49, 0x01, 0x2a, 0x2e, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x10, 0x01, 0x42, 0x14, 0xca, 0xdd, 0x49, 0x06, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x5a,
	0x03, 0x2f, 0x70, 0x62, 0xaa, 0x02, 0x02, 0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_model_user_proto_rawDescOnce sync.Once
	file_model_user_proto_rawDescData = file_model_user_proto_rawDesc
)

func file_model_user_proto_rawDescGZIP() []byte {
	file_model_user_proto_rawDescOnce.Do(func() {
		file_model_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_user_proto_rawDescData)
	})
	return file_model_user_proto_rawDescData
}

var file_model_user_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_model_user_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_model_user_proto_goTypes = []interface{}{
	(OnlineState)(0), // 0: pb.OnlineState
	(*User)(nil),     // 1: pb.User
}
var file_model_user_proto_depIdxs = []int32{
	0, // 0: pb.User.status:type_name -> pb.OnlineState
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_model_user_proto_init() }
func file_model_user_proto_init() {
	if File_model_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_user_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_user_proto_goTypes,
		DependencyIndexes: file_model_user_proto_depIdxs,
		EnumInfos:         file_model_user_proto_enumTypes,
		MessageInfos:      file_model_user_proto_msgTypes,
	}.Build()
	File_model_user_proto = out.File
	file_model_user_proto_rawDesc = nil
	file_model_user_proto_goTypes = nil
	file_model_user_proto_depIdxs = nil
}
